#!/bin/sh

LAUNCHER_PID_FILE="/tmp/$$-laucher.pid"
DISPLAY_PID_FILE="/tmp/$$-laucher.pid"

export LAUNCHER_PID_FILE DISPLAY_PID_FILE

cleanup() {
  kill `cat $LAUNCHER_PID_FILE`
  kill `cat $DISPLAY_PID_FILE`
  kill $DISPATCHER_PID
}

trap cleanup INT TERM

start_dispatcher() {
  A="./System/Services/Dispatcher"
  update_wap $A || exit 1
  node $A/main.js &
  DISPATCHER_PID="$!"
  sleep 1
}

start_launcher() {
  A="./System/Services/Launcher"
  update_wap $A || exit 1
  node $A/main.js &
  echo "$!" > $LAUNCHER_PID_FILE
}

start_display() {
  A="./System/Services/Display"
  update_wap $A || exit 1
  node $A/main.js &
  echo "$!" > $DISPLAY_PID_FILE
}

init_xwin() {
  echo "initialize x"

  if [ -f "$HOME/.Xmodmap" ];then
    xmodmap $HOME/.Xmodmap
  fi

  xsetroot -solid gray
}

B=`realpath "$0"`
B=`dirname $B`
cd "$B/../../"

if [ -n "$DISPLAY" ];then
  init_xwin
fi

export DISPATCHER_PORT=3000
export PATH="$PWD/System/bin:$PATH"

## start core services
start_dispatcher
start_launcher
start_display

## make sure display and launcher are active
dispatch waitfor DISPLAY 1
dispatch waitfor LAUNCHER 1

## launch system applications
launch System/Services/SystemController.wap

## launch user applications
#launch Applications/Terminal.wap
launch System/Applications/AppMenu.wap

wait $DISPATCHER_PID
cleanup
